!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
BodyJson	socksend.go	/^type BodyJson struct {$/;"	t
CarGps	database/cargps.go	/^type CarGps struct {$/;"	t
CarGpsList	saveCarGps.go	/^type CarGpsList struct {$/;"	t
CarGpsStatus	database/cargpsStatus.go	/^type CarGpsStatus struct {$/;"	t
CarGpsStatusList	saveCarGps.go	/^type CarGpsStatusList struct {$/;"	t
Config	config/config.go	/^func Config(key string) string {$/;"	f
ConnectDB	database/connect.go	/^func ConnectDB() {$/;"	f
DB	database/connect.go	/^var DB *gorm.DB$/;"	v
Data	database/incar.go	/^type Data struct {$/;"	t
DroneFlight	database/droneFlight.go	/^type DroneFlight struct {$/;"	t
DroneStation	database/droneStation.go	/^type DroneStation struct {$/;"	t
GunEvent	database/gunevent.go	/^type GunEvent struct {$/;"	t
GunState	database/gunstate.go	/^type GunState struct {$/;"	t
Incar	database/incar.go	/^type Incar struct {$/;"	t
Item	socksend.go	/^type Item struct {$/;"	t
Load	config/config.go	/^func Load() {$/;"	f
SensorGas	database/sensor_gas.go	/^type SensorGas struct {$/;"	t
SensorGasAddr	database/sensor_gas.go	/^type SensorGasAddr struct {$/;"	t
SmartphoneCharger	database/smartphoneCharger.go	/^type SmartphoneCharger struct {$/;"	t
SmartphoneChargerStatus	database/smartphoneChargerStatus.go	/^type SmartphoneChargerStatus struct {$/;"	t
SmartphoneChargerStatusJson	smartphoneCharger.go	/^type SmartphoneChargerStatusJson struct {$/;"	t
SmartphoneChargerStatusJsonSub	smartphoneCharger.go	/^type SmartphoneChargerStatusJsonSub struct {$/;"	t
StringUnixToDateTime	util/util.go	/^func StringUnixToDateTime(inputTime string) time.Time {$/;"	f
TableName	database/cargps.go	/^func (u *CarGps) TableName() string {$/;"	f
TableName	database/cargpsStatus.go	/^func (u *CarGpsStatus) TableName() string {$/;"	f
TableName	database/droneFlight.go	/^func (u *DroneFlight) TableName() string {$/;"	f
TableName	database/droneStation.go	/^func (u *DroneStation) TableName() string {$/;"	f
TableName	database/gunevent.go	/^func (u *GunEvent) TableName() string {$/;"	f
TableName	database/gunstate.go	/^func (u *GunState) TableName() string {$/;"	f
TableName	database/incar.go	/^func (u *Incar) TableName() string {$/;"	f
TableName	database/sensor_gas.go	/^func (u *SensorGas) TableName() string {$/;"	f
TableName	database/smartphoneCharger.go	/^func (u *SmartphoneCharger) TableName() string {$/;"	f
TableName	database/smartphoneChargerStatus.go	/^func (u *SmartphoneChargerStatus) TableName() string {$/;"	f
TableName	database/watchBox.go	/^func (u *WatchBox) TableName() string {$/;"	f
TestLoad	config/config.go	/^func TestLoad() {$/;"	f
TestSensorDataInsert	database/sensor_gas_test.go	/^func TestSensorDataInsert(t *testing.T) {$/;"	f
TestStringUnixToTime	util/util_test.go	/^func TestStringUnixToTime(t *testing.T) {$/;"	f
UUID24Digit	util/util.go	/^func UUID24Digit() string {$/;"	f
UnixToDateTime	util/util.go	/^func UnixToDateTime(inputTime int) time.Time {$/;"	f
WatchBox	database/watchBox.go	/^type WatchBox struct {$/;"	t
WatchBox	watchBox.go	/^type WatchBox struct {$/;"	t
config	config/config.go	/^package config$/;"	p
database	database/cargps.go	/^package database$/;"	p
database	database/cargpsStatus.go	/^package database$/;"	p
database	database/connect.go	/^package database$/;"	p
database	database/droneFlight.go	/^package database$/;"	p
database	database/droneStation.go	/^package database$/;"	p
database	database/gunevent.go	/^package database$/;"	p
database	database/gunstate.go	/^package database$/;"	p
database	database/incar.go	/^package database$/;"	p
database	database/sensor_gas.go	/^package database$/;"	p
database	database/sensor_gas_test.go	/^package database$/;"	p
database	database/smartphoneCharger.go	/^package database$/;"	p
database	database/smartphoneChargerStatus.go	/^package database$/;"	p
database	database/watchBox.go	/^package database$/;"	p
getKafkaReader	main.go	/^func getKafkaReader(kafkaURL, topic, groupID string) *kafka.Reader {$/;"	f
init	main.go	/^func init() {$/;"	f
main	drone.go	/^package main$/;"	p
main	gunbox.go	/^package main$/;"	p
main	main.go	/^func main() {$/;"	f
main	main.go	/^package main$/;"	p
main	play/wow.go	/^func main() {$/;"	f
main	play/wow.go	/^package main$/;"	p
main	saveCarGps.go	/^package main$/;"	p
main	smartphoneCharger.go	/^package main$/;"	p
main	socksend.go	/^package main$/;"	p
main	watchBox.go	/^package main$/;"	p
saveCarGps	saveCarGps.go	/^func saveCarGps(originStr string) {$/;"	f
saveCarGpsStatus	saveCarGps.go	/^func saveCarGpsStatus(originStr string) {$/;"	f
saveDroneFlight	drone.go	/^func saveDroneFlight(originStr string) {$/;"	f
saveDroneStation	drone.go	/^func saveDroneStation(originStr string) {$/;"	f
saveGunEvent	gunbox.go	/^func saveGunEvent(originStr string) {$/;"	f
saveGunState	gunbox.go	/^func saveGunState(originStr string) {$/;"	f
saveIncar	main.go	/^func saveIncar(originStr string) {$/;"	f
saveSensorGas	main.go	/^func saveSensorGas(originStr string) {$/;"	f
saveSmartPhoneCharger	smartphoneCharger.go	/^func saveSmartPhoneCharger(originStr string) {$/;"	f
saveSmartPhoneChargerStatus	smartphoneCharger.go	/^func saveSmartPhoneChargerStatus(originStr string) {$/;"	f
saveWatchBoxStatus	watchBox.go	/^func saveWatchBoxStatus(originStr string) {$/;"	f
schema	main.go	/^	schema avro.Schema$/;"	v
sendMessage	socksend.go	/^func sendMessage(evValue string) {$/;"	f
statEvetItem	socksend.go	/^type statEvetItem []Item$/;"	t
util	util/util.go	/^package util$/;"	p
util	util/util_test.go	/^package util$/;"	p
